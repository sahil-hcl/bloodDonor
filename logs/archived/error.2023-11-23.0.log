2023-11-23 08:37:48 [http-nio-8080-exec-5] INFO  c.h.b.controller.DonorController -
                bloodGroup : A positive, country india, state : up, district : null, city : null
2023-11-23 08:37:48 [http-nio-8080-exec-5] ERROR c.h.b.controller.DonorController -
                bloodGroup : A positive, country india
2023-11-23 08:38:19 [http-nio-8080-exec-6] INFO  c.h.b.controller.DonorController -
                bloodGroup : A , country india, state : up, district : null, city : null
2023-11-23 08:38:19 [http-nio-8080-exec-6] ERROR c.h.b.controller.DonorController -
                bloodGroup : A , country india
2023-11-23 08:49:07 [http-nio-8080-exec-2] INFO  c.h.b.controller.DonorController -
                bloodGroup : A , country india, state : up, district : null, city : null
2023-11-23 08:49:07 [http-nio-8080-exec-2] ERROR c.h.b.controller.DonorController -
                bloodGroup : A , country india
2023-11-23 10:38:01 [http-nio-8080-exec-1] INFO  c.h.b.controller.DonorController -
                bloodGroup : A+, country india, state : up, district : null, city : null
2023-11-23 10:38:01 [http-nio-8080-exec-1] ERROR c.h.b.controller.DonorController -
                bloodGroup : A+, country india
2023-11-23 16:52:07 [main] ERROR o.s.boot.SpringApplication -
                Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'donorController': Unsatisfied dependency expressed through field 'donorService': Error creating bean with name 'donorService': Unsatisfied dependency expressed through field 'donorRepository': Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.hcl.bloodDonor.BloodDonorApplication.main(BloodDonorApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'donorService': Unsatisfied dependency expressed through field 'donorRepository': Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.InterpretationException: Error interpreting query [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]; this may indicate a semantic (user query) problem or a bug in the parser [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:795)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:704)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy115.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.InterpretationException: Error interpreting query [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]; this may indicate a semantic (user query) problem or a bug in the parser [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:97)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:741)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:786)
	... 69 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: Could not resolve attribute 'mobile_number' of 'com.hcl.bloodDonor.entity.Donor'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:61)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:196)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:197)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5208)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5155)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5124)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1749)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7590)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:720)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7064)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitExpressionOrPredicate(HqlParserBaseVisitor.java:860)
	at org.hibernate.grammars.hql.HqlParser$ExpressionOrPredicateContext.accept(HqlParser.java:7813)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitInstantiationArgumentExpression(HqlParserBaseVisitor.java:363)
	at org.hibernate.grammars.hql.HqlParser$InstantiationArgumentExpressionContext.accept(HqlParser.java:4081)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiationArgument(SemanticQueryBuilder.java:1370)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiation(SemanticQueryBuilder.java:1342)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiation(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$InstantiationContext.accept(HqlParser.java:3834)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectableNode(SemanticQueryBuilder.java:1301)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelection(SemanticQueryBuilder.java:1252)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectClause(SemanticQueryBuilder.java:1235)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1155)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:937)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1818)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:931)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1711)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:418)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:377)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:295)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:81)
	... 73 common frames omitted
Caused by: org.hibernate.query.SemanticException: Could not resolve attribute 'mobile_number' of 'com.hcl.bloodDonor.entity.Donor'
	... 110 common frames omitted
2023-11-23 17:06:22 [main] ERROR o.s.boot.SpringApplication -
                Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'donorController': Unsatisfied dependency expressed through field 'donorService': Error creating bean with name 'donorService': Unsatisfied dependency expressed through field 'donorRepository': Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.hcl.bloodDonor.BloodDonorApplication.main(BloodDonorApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'donorService': Unsatisfied dependency expressed through field 'donorRepository': Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.InterpretationException: Error interpreting query [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]; this may indicate a semantic (user query) problem or a bug in the parser [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:795)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:704)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy115.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.InterpretationException: Error interpreting query [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]; this may indicate a semantic (user query) problem or a bug in the parser [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:97)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:741)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:786)
	... 69 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: Could not resolve attribute 'mobile_number' of 'com.hcl.bloodDonor.entity.Donor'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:61)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:196)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:197)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5208)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5155)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5124)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1749)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7590)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:720)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7064)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitExpressionOrPredicate(HqlParserBaseVisitor.java:860)
	at org.hibernate.grammars.hql.HqlParser$ExpressionOrPredicateContext.accept(HqlParser.java:7813)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitInstantiationArgumentExpression(HqlParserBaseVisitor.java:363)
	at org.hibernate.grammars.hql.HqlParser$InstantiationArgumentExpressionContext.accept(HqlParser.java:4081)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiationArgument(SemanticQueryBuilder.java:1370)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiation(SemanticQueryBuilder.java:1342)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiation(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$InstantiationContext.accept(HqlParser.java:3834)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectableNode(SemanticQueryBuilder.java:1301)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelection(SemanticQueryBuilder.java:1252)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectClause(SemanticQueryBuilder.java:1235)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1155)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:937)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1818)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:931)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1711)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:418)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:377)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:295)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:81)
	... 73 common frames omitted
Caused by: org.hibernate.query.SemanticException: Could not resolve attribute 'mobile_number' of 'com.hcl.bloodDonor.entity.Donor'
	... 110 common frames omitted
2023-11-23 18:13:38 [main] ERROR o.s.boot.SpringApplication -
                Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'donorController': Unsatisfied dependency expressed through field 'donorService': Error creating bean with name 'donorService': Unsatisfied dependency expressed through field 'donorRepository': Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.hcl.bloodDonor.BloodDonorApplication.main(BloodDonorApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'donorService': Unsatisfied dependency expressed through field 'donorRepository': Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'donorRepository' defined in com.hcl.bloodDonor.repository.DonorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); Reason: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.hcl.bloodDonor.repository.DonorRepository.findByBloodGroupAndCountry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:100)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:70)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:60)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:170)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.InterpretationException: Error interpreting query [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]; this may indicate a semantic (user query) problem or a bug in the parser [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:795)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:704)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy115.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:94)
	... 62 common frames omitted
Caused by: org.hibernate.query.sqm.InterpretationException: Error interpreting query [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]; this may indicate a semantic (user query) problem or a bug in the parser [Select new com.hcl.bloodDonor.response.DonorResponse(d.name as name, b.bloodGroupName as bloodGroup, d.mobile_number as mobile_number, a.city as city, a.district as district, a.state as state, a.country as country, d.availability as availability) from Donor d join address a on a.address_id=d.address.address_id join bloodGroup b on b.bloodGroupId=d.bloodGroup.bloodGroupId where b.bloodGroupName=:bloodGroup and a.country=:country and (:state is null or a.state = :state) and (:district is null or a.district = :district) and (:city is null or a.city = :city)]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:97)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:165)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:147)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:741)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:786)
	... 69 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.SemanticException: Could not resolve attribute 'mobile_number' of 'com.hcl.bloodDonor.entity.Donor'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:61)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:196)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:197)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:91)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5208)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitIndexedPathAccessFragment(SemanticQueryBuilder.java:5155)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5124)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1749)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:7590)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:720)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7064)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitExpressionOrPredicate(HqlParserBaseVisitor.java:860)
	at org.hibernate.grammars.hql.HqlParser$ExpressionOrPredicateContext.accept(HqlParser.java:7813)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitInstantiationArgumentExpression(HqlParserBaseVisitor.java:363)
	at org.hibernate.grammars.hql.HqlParser$InstantiationArgumentExpressionContext.accept(HqlParser.java:4081)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiationArgument(SemanticQueryBuilder.java:1370)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiation(SemanticQueryBuilder.java:1342)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitInstantiation(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$InstantiationContext.accept(HqlParser.java:3834)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectableNode(SemanticQueryBuilder.java:1301)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelection(SemanticQueryBuilder.java:1252)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectClause(SemanticQueryBuilder.java:1235)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1155)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:937)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:1818)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:931)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:253)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:1711)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:418)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:377)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:295)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:81)
	... 73 common frames omitted
Caused by: org.hibernate.query.SemanticException: Could not resolve attribute 'mobile_number' of 'com.hcl.bloodDonor.entity.Donor'
	... 110 common frames omitted
2023-11-23 19:45:12 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper -
                Duplicate entry 'asabbbbhbbd@dnd.com' for key 'login.PRIMARY'
2023-11-23 20:55:55 [main] INFO  c.h.b.c.AddressControllerTest -
                Starting AddressControllerTest using Java 21.0.1 with PID 14080 (started by sahil_srivastava in C:\Users\sahil_srivastava\Downloads\bloodDonor\bloodDonor)
2023-11-23 20:55:55 [main] DEBUG c.h.b.c.AddressControllerTest -
                Running with Spring Boot v3.1.5, Spring v6.0.13
2023-11-23 20:55:55 [main] INFO  c.h.b.c.AddressControllerTest -
                No active profile set, falling back to 1 default profile: "default"
2023-11-23 20:55:58 [main] INFO  c.h.b.c.AddressControllerTest -
                Started AddressControllerTest in 3.144 seconds (process running for 4.823)
2023-11-23 20:57:14 [main] INFO  c.h.b.c.AddressControllerTest -
                Starting AddressControllerTest using Java 21.0.1 with PID 8680 (started by sahil_srivastava in C:\Users\sahil_srivastava\Downloads\bloodDonor\bloodDonor)
2023-11-23 20:57:14 [main] DEBUG c.h.b.c.AddressControllerTest -
                Running with Spring Boot v3.1.5, Spring v6.0.13
2023-11-23 20:57:14 [main] INFO  c.h.b.c.AddressControllerTest -
                No active profile set, falling back to 1 default profile: "default"
2023-11-23 20:57:17 [main] INFO  c.h.b.c.AddressControllerTest -
                Started AddressControllerTest in 3.716 seconds (process running for 6.604)
2023-11-23 21:01:57 [main] INFO  c.h.b.c.AddressControllerTest -
                Starting AddressControllerTest using Java 21.0.1 with PID 5108 (started by sahil_srivastava in C:\Users\sahil_srivastava\Downloads\bloodDonor\bloodDonor)
2023-11-23 21:01:57 [main] DEBUG c.h.b.c.AddressControllerTest -
                Running with Spring Boot v3.1.5, Spring v6.0.13
2023-11-23 21:01:57 [main] INFO  c.h.b.c.AddressControllerTest -
                No active profile set, falling back to 1 default profile: "default"
2023-11-23 21:02:00 [main] INFO  c.h.b.c.AddressControllerTest -
                Started AddressControllerTest in 3.135 seconds (process running for 4.968)
2023-11-23 21:04:11 [main] INFO  c.h.b.c.AddressControllerTest -
                Starting AddressControllerTest using Java 21.0.1 with PID 24980 (started by sahil_srivastava in C:\Users\sahil_srivastava\Downloads\bloodDonor\bloodDonor)
2023-11-23 21:04:11 [main] DEBUG c.h.b.c.AddressControllerTest -
                Running with Spring Boot v3.1.5, Spring v6.0.13
2023-11-23 21:04:11 [main] INFO  c.h.b.c.AddressControllerTest -
                No active profile set, falling back to 1 default profile: "default"
2023-11-23 21:04:13 [main] INFO  c.h.b.c.AddressControllerTest -
                Started AddressControllerTest in 2.928 seconds (process running for 4.455)
2023-11-23 21:06:44 [main] INFO  c.h.b.c.AddressControllerTest -
                Starting AddressControllerTest using Java 21.0.1 with PID 21728 (started by sahil_srivastava in C:\Users\sahil_srivastava\Downloads\bloodDonor\bloodDonor)
2023-11-23 21:06:44 [main] DEBUG c.h.b.c.AddressControllerTest -
                Running with Spring Boot v3.1.5, Spring v6.0.13
2023-11-23 21:06:44 [main] INFO  c.h.b.c.AddressControllerTest -
                No active profile set, falling back to 1 default profile: "default"
2023-11-23 21:06:47 [main] INFO  c.h.b.c.AddressControllerTest -
                Started AddressControllerTest in 3.015 seconds (process running for 4.607)
2023-11-23 21:09:24 [main] INFO  c.h.b.c.AddressControllerTest -
                Starting AddressControllerTest using Java 21.0.1 with PID 26096 (started by sahil_srivastava in C:\Users\sahil_srivastava\Downloads\bloodDonor\bloodDonor)
2023-11-23 21:09:24 [main] DEBUG c.h.b.c.AddressControllerTest -
                Running with Spring Boot v3.1.5, Spring v6.0.13
2023-11-23 21:09:24 [main] INFO  c.h.b.c.AddressControllerTest -
                No active profile set, falling back to 1 default profile: "default"
2023-11-23 21:09:27 [main] INFO  c.h.b.c.AddressControllerTest -
                Started AddressControllerTest in 3.017 seconds (process running for 4.762)
2023-11-23 21:10:16 [main] INFO  c.h.b.c.AddressControllerTest -
                Starting AddressControllerTest using Java 21.0.1 with PID 12072 (started by sahil_srivastava in C:\Users\sahil_srivastava\Downloads\bloodDonor\bloodDonor)
2023-11-23 21:10:16 [main] DEBUG c.h.b.c.AddressControllerTest -
                Running with Spring Boot v3.1.5, Spring v6.0.13
2023-11-23 21:10:16 [main] INFO  c.h.b.c.AddressControllerTest -
                No active profile set, falling back to 1 default profile: "default"
2023-11-23 21:10:19 [main] INFO  c.h.b.c.AddressControllerTest -
                Started AddressControllerTest in 2.905 seconds (process running for 4.596)
